#!/bin/bash
#SBATCH --job-name=sinto
#SBATCH -p standard
#SBATCH -A vswarup_lab
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=32
#SBATCH --error=slurm-%J.err
#SBATCH --mem 64G
#SBATCH --array=0-16
#SBATCH --time=72:00:00

# activate conda env with sinto + deeptools installed
source ~/.bashrc
conda activate scvi-env
module load samtools

# directory with barcodes files:
barcodes_dir="/dfs3b/swaruplab/smorabit/analysis/PiD_2021/trackhubs/data/barcodes/"

# cellranger directory:
cellranger_dir="/dfs3b/swaruplab/smorabit/data/PiD_2021/cellranger/"

# directory where we will output bam files:
output_dir="/dfs3b/swaruplab/smorabit/analysis/PiD_2021/trackhubs/data/bams/"

mkdir -p $output_dir/celltypes

# select barcodes file based on the task array:
samples=($(ls $barcodes_dir | cut -d '_' -f 1-3 | uniq))

# get current sample based on the SLURM job ID
let index="$SLURM_ARRAY_TASK_ID"
sample=${samples[$index]}


if [[ $sample =~ "tsv" ]]
then
  sample=($(echo $sample | cut -d '_' -f 1 ))
fi
echo $sample

# make output folders for this sample:
mkdir -p $output_dir/celltypes/$sample

################################################################################
# cell type processing
################################################################################

# run sinto to split .bam file by barcodes
cd $output_dir/celltypes/$sample

sinto filterbarcodes \
  -b $cellranger_dir/$sample/"outs/possorted_bam.bam" \
  -c $barcodes_dir/$sample"_celltype_barcodes.tsv" \
  -p  32 # number of processors

# index all of the bam files in this folder:
for f in *; do
  samtools index -@ 16 $f
done
